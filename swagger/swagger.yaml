{
  'openapi': '3.0.0',
  'info':
    {
      'title': 'Api Planner',
      'description': 'The API Planner project',
      'version': '1.0.0',
    },
  'servers':
    [
      {
        'url': 'https://virtserver.swaggerhub.com/EduardoSLuz/Api-Planner/1.0.0',
        'description': 'SwaggerHub Api Planner',
      },
    ],
  'paths':
    {
      '/events':
        {
          'get':
            {
              'tags': ['Event'],
              'description': 'returns all registered events',
              'operationId': 'getAllEvents',
              'responses':
                {
                  '200':
                    {
                      'description': 'All events',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/EventsAllResponse',
                                },
                            },
                        },
                    },
                  '404':
                    {
                      'description': 'Fail No Event Found',
                      'content':
                        {
                          'application/json':
                            {
                              'schema': { '$ref': '#/components/schemas/Fail' },
                            },
                        },
                    },
                },
              'x-swagger-router-controller': 'Events',
            },
          'post':
            {
              'tags': ['Event'],
              'operationId': 'postCreateEvent',
              'requestBody':
                {
                  'content':
                    {
                      'application/json':
                        {
                          'schema':
                            {
                              '$ref': '#/components/schemas/EventCreateRequest',
                            },
                        },
                    },
                },
              'responses':
                {
                  '200':
                    {
                      'description': 'The event has been successfully registered',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/EventSendResponse',
                                },
                            },
                        },
                    },
                  '404':
                    {
                      'description': 'Fail Invalid Request',
                      'content':
                        {
                          'application/json':
                            {
                              'schema': { '$ref': '#/components/schemas/Fail' },
                            },
                        },
                    },
                },
              'x-swagger-router-controller': 'Events',
            },
        },
      '/events/{id}':
        {
          'get':
            {
              'tags': ['Event'],
              'description': 'returns a registered event by id',
              'operationId': 'getEventById',
              'parameters':
                [
                  {
                    'name': 'id',
                    'in': 'path',
                    'required': true,
                    'style': 'simple',
                    'explode': false,
                    'schema': { 'type': 'number' },
                  },
                ],
              'responses':
                {
                  '200':
                    {
                      'description': 'The event',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                { '$ref': '#/components/schemas/Event' },
                            },
                        },
                    },
                  '404':
                    {
                      'description': 'Fail No Event Found',
                      'content':
                        {
                          'application/json':
                            {
                              'schema': { '$ref': '#/components/schemas/Fail' },
                            },
                        },
                    },
                  'x-swagger-router-controller': 'Events',
                },
            },
          'delete':
            {
              'tags': ['Event'],
              'description': 'delete a registered event by id',
              'operationId': 'DeleteEventById',
              'parameters':
                [
                  {
                    'name': 'id',
                    'in': 'path',
                    'required': true,
                    'style': 'simple',
                    'explode': false,
                    'schema': { 'type': 'number' },
                  },
                ],
              'responses':
                {
                  '200':
                    {
                      'description': 'Delete an event',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/EventSendResponse',
                                },
                            },
                        },
                    },
                  '404':
                    {
                      'description': 'Fail No Event Found',
                      'content':
                        {
                          'application/json':
                            {
                              'schema': { '$ref': '#/components/schemas/Fail' },
                            },
                        },
                    },
                },
              'x-swagger-router-controller': 'Events',
            },
        },
      '/events/{weekday}':
        {
          'get':
            {
              'tags': ['Event'],
              'description': 'returns all registered events by weekday',
              'operationId': 'getEventByWeekday',
              'parameters':
                [
                  {
                    'name': 'weekday',
                    'in': 'path',
                    'required': true,
                    'style': 'simple',
                    'explode': false,
                    'schema':
                      {
                        'type': 'string',
                        'enum':
                          [
                            'sunday',
                            'monday',
                            'tuesday',
                            'wednesday',
                            'thursday',
                            'friday',
                            'saturday',
                          ],
                      },
                  },
                ],
              'responses':
                {
                  '200':
                    {
                      'description': 'All events for that day of the week',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/EventsAllResponse',
                                },
                            },
                        },
                    },
                  '404':
                    {
                      'description': 'Fail No Event Found',
                      'content':
                        {
                          'application/json':
                            {
                              'schema': { '$ref': '#/components/schemas/Fail' },
                            },
                        },
                    },
                  'x-swagger-router-controller': 'Events',
                },
            },
          'delete':
            {
              'tags': ['Event'],
              'description': 'delete all registered events by weekday',
              'operationId': 'DeleteEventByWeekday',
              'parameters':
                [
                  {
                    'name': 'weekday',
                    'in': 'path',
                    'required': true,
                    'style': 'simple',
                    'explode': false,
                    'schema':
                      {
                        'type': 'string',
                        'enum':
                          [
                            'sunday',
                            'monday',
                            'tuesday',
                            'wednesday',
                            'thursday',
                            'friday',
                            'saturday',
                          ],
                      },
                  },
                ],
              'responses':
                {
                  '200':
                    {
                      'description': 'Delete all events for that day of the week',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/EventSendResponse',
                                },
                            },
                        },
                    },
                  '404':
                    {
                      'description': 'Fail No Event Found',
                      'content':
                        {
                          'application/json':
                            {
                              'schema': { '$ref': '#/components/schemas/Fail' },
                            },
                        },
                    },
                },
              'x-swagger-router-controller': 'Events',
            },
        },
      '/Users/SignUp':
        {
          'post':
            {
              'tags': ['Users'],
              'operationId': 'postUserSignUp',
              'requestBody':
                {
                  'content':
                    {
                      'application/json':
                        {
                          'schema':
                            { '$ref': '#/components/schemas/UserRequest' },
                        },
                    },
                },
              'responses':
                {
                  '200':
                    {
                      'description': 'The user has been successfully registered',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/UserPostResponse',
                                },
                            },
                        },
                    },
                  '404':
                    {
                      'description': 'Fail message...',
                      'content':
                        {
                          'application/json':
                            {
                              'schema': { '$ref': '#/components/schemas/Fail' },
                            },
                        },
                    },
                },
            },
        },
      '/Users/SignIn':
        {
          'post':
            {
              'tags': ['Users'],
              'operationId': 'postUserSignIn',
              'requestBody':
                {
                  'content':
                    {
                      'application/json':
                        {
                          'schema':
                            { '$ref': '#/components/schemas/UserLoginRequest' },
                        },
                    },
                },
              'responses':
                {
                  '200':
                    {
                      'description': 'The user has been successfully logged in',
                      'content':
                        {
                          'application/json':
                            {
                              'schema':
                                {
                                  '$ref': '#/components/schemas/UserPostResponse',
                                },
                            },
                        },
                    },
                  '404':
                    {
                      'description': 'Fail message...',
                      'content':
                        {
                          'application/json':
                            {
                              'schema': { '$ref': '#/components/schemas/Fail' },
                            },
                        },
                    },
                },
            },
        },
    },
  'components':
    {
      'schemas':
        {
          'EventsAllResponse':
            {
              'type': 'array',
              'items': { '$ref': '#/components/schemas/Event' },
            },
          'Event':
            {
              'type': 'object',
              'properties':
                {
                  '_id': { 'type': 'string' },
                  'description': { 'type': 'string' },
                  'dateTime':
                    { 'type': 'string', 'format': 'yyyy-mm-ddTH:m:sZ' },
                  'createdAt':
                    { 'type': 'string', 'format': 'yyyy-mm-ddTH:m:sZ' },
                },
            },
          'EventCreateRequest':
            {
              'type': 'object',
              'properties':
                {
                  'description': { 'type': 'string' },
                  'dateTime':
                    { 'type': 'string', 'format': 'yyyy-mm-ddTH:m:sZ' },
                  'createdAt':
                    { 'type': 'string', 'format': 'yyyy-mm-ddTH:m:sZ' },
                },
            },
          'EventSendResponse':
            {
              'type': 'object',
              'properties':
                {
                  'status': { 'type': 'string' },
                  'message': { 'type': 'string' },
                  'data':
                    { '$ref': '#/components/schemas/EventSendResponse_data' },
                },
            },
          'User':
            {
              'type': 'object',
              'properties':
                {
                  '_id': { 'type': 'string' },
                  'firstName': { 'type': 'string' },
                  'lastName': { 'type': 'string' },
                  'birthDate': { 'type': 'string', 'format': 'yyyy-mm-dd' },
                  'city': { 'type': 'string' },
                  'country': { 'type': 'string' },
                  'email': { 'type': 'string' },
                  'password': { 'type': 'string', 'format': '********' },
                  'confirmPassword': { 'type': 'string', 'format': '********' },
                },
            },
          'UserRequest':
            {
              'type': 'object',
              'properties':
                {
                  'firstName': { 'type': 'string' },
                  'lastName': { 'type': 'string' },
                  'birthDate': { 'type': 'string', 'format': 'yyyy-mm-dd' },
                  'city': { 'type': 'string' },
                  'country': { 'type': 'string' },
                  'email': { 'type': 'string' },
                  'password': { 'type': 'string', 'format': '********' },
                  'confirmPassword': { 'type': 'string', 'format': '********' },
                },
            },
          'UserLoginRequest':
            {
              'type': 'object',
              'properties':
                {
                  'email': { 'type': 'string' },
                  'password': { 'type': 'string' },
                },
            },
          'UserPostResponse':
            {
              'type': 'object',
              'properties':
                {
                  'status': { 'type': 'string' },
                  'message':
                    { 'type': 'string', 'format': 'yyyy-mm-ddTH:m:sZ' },
                  'data':
                    { '$ref': '#/components/schemas/UserPostResponse_data' },
                },
            },
          'Fail':
            {
              'type': 'object',
              'properties':
                {
                  'staus': { 'type': 'string', 'format': 'fail' },
                  'message': { 'type': 'string' },
                },
              'description': 'failMessage.',
            },
          'EventSendResponse_data':
            {
              'type': 'object',
              'properties':
                {
                  'event':
                    {
                      'type': 'array',
                      'items': { '$ref': '#/components/schemas/Event' },
                    },
                },
            },
          'UserPostResponse_data':
            {
              'type': 'object',
              'properties':
                {
                  'user':
                    {
                      'type': 'array',
                      'items': { '$ref': '#/components/schemas/User' },
                    },
                },
            },
        },
    },
}
